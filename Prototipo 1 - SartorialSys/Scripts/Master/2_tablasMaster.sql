--TABLA FRAGMENTADA
CREATE TABLE proveedores_quito(
    ruc VARCHAR(13) PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    direccion VARCHAR2(100) NOT NULL,
    telefono VARCHAR2(10) UNIQUE NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    tipo_proveedor VARCHAR2(20) NOT NULL,
    sucursal VARCHAR2(25) NOT NULL
);
alter table proveedores_quito add constraint proveedores_quito_ck check(sucursal='Quito');

--TABLA REPLICADA
CREATE TABLE productos (
    codigo_producto VARCHAR2(10) PRIMARY KEY,
    RUC_proveedor_fk VARCHAR2(13) NOT NULL,
    descripcion VARCHAR2(100),
    cantidad_inicial NUMBER NOT NULL,
    precio_compra NUMBER(10, 2) NOT NULL,
    precio_venta NUMBER(10, 2) NOT NULL,
    fecha_ingreso DATE NOT NULL,
    categoria VARCHAR2(20) NOT NULL,
    color VARCHAR2(15) NOT NULL,
    talla VARCHAR2(5) NOT NULL,
    CONSTRAINT RUC_fk FOREIGN KEY (RUC_proveedor_fk) REFERENCES proveedores_quito(ruc)
);
create materialized view log on productos;

--TABLA FRAGMENTADA
CREATE TABLE clientes_quito (
    cedula_cli VARCHAR(10) PRIMARY KEY,
    nombres VARCHAR2(100) NOT NULL,
    apellidos VARCHAR2(100) NOT NULL,
    dir_domiciliaria VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    telefono VARCHAR2(10) NOT NULL,
    canton VARCHAR2(25) NOT NULL
);
alter table clientes_quito add constraint clientes_quito_ck check(canton='Quito');

CREATE TABLE medidas_quito(
    id_medida NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cedula_cliente VARCHAR(10) NOT NULL,
    largo_talle NUMBER(10, 2),
    largo_total NUMBER(10, 2),
    ancho_espalda NUMBER(10, 2),
    ancho_hombros NUMBER(10, 2),
    ancho_clavicula NUMBER(10, 2),
    pecho_superior NUMBER(10, 2),
    pecho_inferior NUMBER(10, 2),
    cintura_drop NUMBER(10, 2),
    contorno_cadera NUMBER(10, 2),
    largo_manga NUMBER(10, 2),
    largo_entrepierna NUMBER(10, 2),
    ancho_rodilla NUMBER(10, 2),
    ancho_basta NUMBER(10, 2),
    largo_tiro NUMBER(10, 2),
    CONSTRAINT cedula_cliente_fk FOREIGN KEY (cedula_cliente) REFERENCES clientes_quito(cedula_cli)
);

--TABLA REPLICADA
CREATE TABLE pedidos(
    codigo_ped VARCHAR(10) PRIMARY KEY,
    cedula_cliente VARCHAR(10) NOT NULL,
    modelo VARCHAR(20) NOT NULL,
    total NUMBER(10,2) NOT NULL,
    abonado NUMBER(10,2) NOT NULL,
    saldo NUMBER(10,2) NOT NULL,
    estado_pedido VARCHAR2(10) NOT NULL,
    CONSTRAINT cedula_cliente_fk_pedidos FOREIGN KEY (cedula_cliente) REFERENCES clientes_quito(cedula_cli)
);
create materialized view log on pedidos;


--TABLA FRAGMENTADA
CREATE TABLE empleados_1 (
    cedula_empleado VARCHAR(10) PRIMARY KEY,
    nombres VARCHAR2(100) NOT NULL,
    apellidos VARCHAR2(100) NOT NULL,
    dir_domiciliaria VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    salario NUMBER(10, 2) NOT NULL,
    hora_entrada VARCHAR2(5) UNIQUE NOT NULL,
    hora_almuerzo VARCHAR2(5) UNIQUE NOT NULL,
    hora_salida VARCHAR2(5) UNIQUE NOT NULL
);
alter table empleados_1 add constraint empleados_1_ck check(salario>450);

--TABLA REPLICADA
CREATE TABLE credenciales(
    usuario VARCHAR(12) PRIMARY KEY,
    contrasenia VARCHAR(12) NOT NULL,
    cedula_empleado VARCHAR2(10) NOT NULL,
    rol VARCHAR(15) NOT NULL,
    CONSTRAINT cedula_empleado_fk FOREIGN KEY (cedula_empleado) REFERENCES empleados_1(cedula_empleado)
);
create materialized view log on credenciales;


CREATE TABLE facturas(
    num_factura VARCHAR2(12) NOT NULL PRIMARY KEY,
    cedula_cliente VARCHAR2(10) NOT NULL,
    cedula_empleado VARCHAR2(10) NOT NULL,
    fecha_venta DATE NOT NULL,
    metodo_pago VARCHAR2(15) NOT NULL,
    estado_pago NUMBER NOT NULL,
    CONSTRAINT cedula_cliente_fk_facturas FOREIGN KEY (cedula_cliente) REFERENCES clientes_quito(cedula_cli),
    CONSTRAINT cedula_empleado_fk_facturas FOREIGN KEY (cedula_empleado) REFERENCES empleados_1(cedula_empleado)
);

CREATE TABLE items(
    codigo_pedido VARCHAR(10),
    codigo_producto VARCHAR(10),
    num_factura VARCHAR2(12) NOT NULL,
    cantidad NUMBER NOT NULL,
    CONSTRAINT codigo_pedido_fk FOREIGN KEY (codigo_pedido) REFERENCES pedidos(codigo_ped),
    CONSTRAINT codigo_producto_fk_items FOREIGN KEY (codigo_producto) REFERENCES productos(codigo_producto),
    CONSTRAINT numero_factura_fk FOREIGN KEY (num_factura) REFERENCES facturas(num_factura)
);
